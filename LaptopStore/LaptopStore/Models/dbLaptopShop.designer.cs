#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LaptopStore.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LaptopShop")]
	public partial class dbLaptopShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadministrator(administrator instance);
    partial void Updateadministrator(administrator instance);
    partial void Deleteadministrator(administrator instance);
    partial void Insertordersdetail(ordersdetail instance);
    partial void Updateordersdetail(ordersdetail instance);
    partial void Deleteordersdetail(ordersdetail instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void InsertLAPTOP(LAPTOP instance);
    partial void UpdateLAPTOP(LAPTOP instance);
    partial void DeleteLAPTOP(LAPTOP instance);
    partial void InsertLAPTOPDETAIL(LAPTOPDETAIL instance);
    partial void UpdateLAPTOPDETAIL(LAPTOPDETAIL instance);
    partial void DeleteLAPTOPDETAIL(LAPTOPDETAIL instance);
    partial void Insertmanufacturer(manufacturer instance);
    partial void Updatemanufacturer(manufacturer instance);
    partial void Deletemanufacturer(manufacturer instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    #endregion
		
		public dbLaptopShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLaptopShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLaptopShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbLaptopShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<administrator> administrators
		{
			get
			{
				return this.GetTable<administrator>();
			}
		}
		
		public System.Data.Linq.Table<ordersdetail> ordersdetails
		{
			get
			{
				return this.GetTable<ordersdetail>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<LAPTOP> LAPTOPs
		{
			get
			{
				return this.GetTable<LAPTOP>();
			}
		}
		
		public System.Data.Linq.Table<LAPTOPDETAIL> LAPTOPDETAILs
		{
			get
			{
				return this.GetTable<LAPTOPDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<manufacturer> manufacturers
		{
			get
			{
				return this.GetTable<manufacturer>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.administrator")]
	public partial class administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private string _hoten;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    #endregion
		
		public administrator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="NVarChar(20)")]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ordersdetail")]
	public partial class ordersdetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDO;
		
		private int _ID;
		
		private System.Nullable<int> _Number;
		
		private System.Nullable<double> _Price;
		
		private EntityRef<LAPTOP> _LAPTOP;
		
		private EntityRef<order> _order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOChanging(int value);
    partial void OnIDOChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNumberChanging(System.Nullable<int> value);
    partial void OnNumberChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    #endregion
		
		public ordersdetail()
		{
			this._LAPTOP = default(EntityRef<LAPTOP>);
			this._order = default(EntityRef<order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDO
		{
			get
			{
				return this._IDO;
			}
			set
			{
				if ((this._IDO != value))
				{
					if (this._order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDOChanging(value);
					this.SendPropertyChanging();
					this._IDO = value;
					this.SendPropertyChanged("IDO");
					this.OnIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._LAPTOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int")]
		public System.Nullable<int> Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_ordersdetail", Storage="_LAPTOP", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public LAPTOP LAPTOP
		{
			get
			{
				return this._LAPTOP.Entity;
			}
			set
			{
				LAPTOP previousValue = this._LAPTOP.Entity;
				if (((previousValue != value) 
							|| (this._LAPTOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAPTOP.Entity = null;
						previousValue.ordersdetails.Remove(this);
					}
					this._LAPTOP.Entity = value;
					if ((value != null))
					{
						value.ordersdetails.Add(this);
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("LAPTOP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_ordersdetail", Storage="_order", ThisKey="IDO", OtherKey="IDO", IsForeignKey=true)]
		public order order
		{
			get
			{
				return this._order.Entity;
			}
			set
			{
				order previousValue = this._order.Entity;
				if (((previousValue != value) 
							|| (this._order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._order.Entity = null;
						previousValue.ordersdetails.Remove(this);
					}
					this._order.Entity = value;
					if ((value != null))
					{
						value.ordersdetails.Add(this);
						this._IDO = value.IDO;
					}
					else
					{
						this._IDO = default(int);
					}
					this.SendPropertyChanged("order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customers")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDC;
		
		private string _CustomersName;
		
		private string _Account;
		
		private string _Passwords;
		
		private string _ConfirmPassword;
		
		private string _Email;
		
		private string _Addresses;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private EntitySet<order> _orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCChanging(int value);
    partial void OnIDCChanged();
    partial void OnCustomersNameChanging(string value);
    partial void OnCustomersNameChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnPasswordsChanging(string value);
    partial void OnPasswordsChanged();
    partial void OnConfirmPasswordChanging(string value);
    partial void OnConfirmPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressesChanging(string value);
    partial void OnAddressesChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    #endregion
		
		public customer()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDC
		{
			get
			{
				return this._IDC;
			}
			set
			{
				if ((this._IDC != value))
				{
					this.OnIDCChanging(value);
					this.SendPropertyChanging();
					this._IDC = value;
					this.SendPropertyChanged("IDC");
					this.OnIDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomersName", DbType="NVarChar(100)")]
		public string CustomersName
		{
			get
			{
				return this._CustomersName;
			}
			set
			{
				if ((this._CustomersName != value))
				{
					this.OnCustomersNameChanging(value);
					this.SendPropertyChanging();
					this._CustomersName = value;
					this.SendPropertyChanged("CustomersName");
					this.OnCustomersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(20)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwords", DbType="VarChar(50)")]
		public string Passwords
		{
			get
			{
				return this._Passwords;
			}
			set
			{
				if ((this._Passwords != value))
				{
					this.OnPasswordsChanging(value);
					this.SendPropertyChanging();
					this._Passwords = value;
					this.SendPropertyChanged("Passwords");
					this.OnPasswordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmPassword", DbType="VarChar(50)")]
		public string ConfirmPassword
		{
			get
			{
				return this._ConfirmPassword;
			}
			set
			{
				if ((this._ConfirmPassword != value))
				{
					this.OnConfirmPasswordChanging(value);
					this.SendPropertyChanging();
					this._ConfirmPassword = value;
					this.SendPropertyChanged("ConfirmPassword");
					this.OnConfirmPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Addresses", DbType="NVarChar(200)")]
		public string Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				if ((this._Addresses != value))
				{
					this.OnAddressesChanging(value);
					this.SendPropertyChanging();
					this._Addresses = value;
					this.SendPropertyChanged("Addresses");
					this.OnAddressesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(12)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="IDC", OtherKey="IDC")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAPTOP")]
	public partial class LAPTOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProductName;
		
		private System.Nullable<double> _Price;
		
		private string _ImageCover;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _IDM;
		
		private EntitySet<ordersdetail> _ordersdetails;
		
		private EntityRef<LAPTOPDETAIL> _LAPTOPDETAIL;
		
		private EntityRef<manufacturer> _manufacturer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnImageCoverChanging(string value);
    partial void OnImageCoverChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnIDMChanging(System.Nullable<int> value);
    partial void OnIDMChanged();
    #endregion
		
		public LAPTOP()
		{
			this._ordersdetails = new EntitySet<ordersdetail>(new Action<ordersdetail>(this.attach_ordersdetails), new Action<ordersdetail>(this.detach_ordersdetails));
			this._LAPTOPDETAIL = default(EntityRef<LAPTOPDETAIL>);
			this._manufacturer = default(EntityRef<manufacturer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageCover", DbType="VarChar(50)")]
		public string ImageCover
		{
			get
			{
				return this._ImageCover;
			}
			set
			{
				if ((this._ImageCover != value))
				{
					this.OnImageCoverChanging(value);
					this.SendPropertyChanging();
					this._ImageCover = value;
					this.SendPropertyChanged("ImageCover");
					this.OnImageCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDM", DbType="Int")]
		public System.Nullable<int> IDM
		{
			get
			{
				return this._IDM;
			}
			set
			{
				if ((this._IDM != value))
				{
					if (this._manufacturer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMChanging(value);
					this.SendPropertyChanging();
					this._IDM = value;
					this.SendPropertyChanged("IDM");
					this.OnIDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_ordersdetail", Storage="_ordersdetails", ThisKey="ID", OtherKey="ID")]
		public EntitySet<ordersdetail> ordersdetails
		{
			get
			{
				return this._ordersdetails;
			}
			set
			{
				this._ordersdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_LAPTOPDETAIL", Storage="_LAPTOPDETAIL", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public LAPTOPDETAIL LAPTOPDETAIL
		{
			get
			{
				return this._LAPTOPDETAIL.Entity;
			}
			set
			{
				LAPTOPDETAIL previousValue = this._LAPTOPDETAIL.Entity;
				if (((previousValue != value) 
							|| (this._LAPTOPDETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAPTOPDETAIL.Entity = null;
						previousValue.LAPTOP = null;
					}
					this._LAPTOPDETAIL.Entity = value;
					if ((value != null))
					{
						value.LAPTOP = this;
					}
					this.SendPropertyChanged("LAPTOPDETAIL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="manufacturer_LAPTOP", Storage="_manufacturer", ThisKey="IDM", OtherKey="IDM", IsForeignKey=true)]
		public manufacturer manufacturer
		{
			get
			{
				return this._manufacturer.Entity;
			}
			set
			{
				manufacturer previousValue = this._manufacturer.Entity;
				if (((previousValue != value) 
							|| (this._manufacturer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._manufacturer.Entity = null;
						previousValue.LAPTOPs.Remove(this);
					}
					this._manufacturer.Entity = value;
					if ((value != null))
					{
						value.LAPTOPs.Add(this);
						this._IDM = value.IDM;
					}
					else
					{
						this._IDM = default(Nullable<int>);
					}
					this.SendPropertyChanged("manufacturer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ordersdetails(ordersdetail entity)
		{
			this.SendPropertyChanging();
			entity.LAPTOP = this;
		}
		
		private void detach_ordersdetails(ordersdetail entity)
		{
			this.SendPropertyChanging();
			entity.LAPTOP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAPTOPDETAILS")]
	public partial class LAPTOPDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Screen;
		
		private string _Cpu;
		
		private string _Ram;
		
		private string _Vga;
		
		private string _OS;
		
		private System.Nullable<double> _Quantity;
		
		private EntityRef<LAPTOP> _LAPTOP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnScreenChanging(string value);
    partial void OnScreenChanged();
    partial void OnCpuChanging(string value);
    partial void OnCpuChanged();
    partial void OnRamChanging(string value);
    partial void OnRamChanged();
    partial void OnVgaChanging(string value);
    partial void OnVgaChanged();
    partial void OnOSChanging(string value);
    partial void OnOSChanged();
    partial void OnQuantityChanging(System.Nullable<double> value);
    partial void OnQuantityChanged();
    #endregion
		
		public LAPTOPDETAIL()
		{
			this._LAPTOP = default(EntityRef<LAPTOP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._LAPTOP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screen", DbType="VarChar(100)")]
		public string Screen
		{
			get
			{
				return this._Screen;
			}
			set
			{
				if ((this._Screen != value))
				{
					this.OnScreenChanging(value);
					this.SendPropertyChanging();
					this._Screen = value;
					this.SendPropertyChanged("Screen");
					this.OnScreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cpu", DbType="VarChar(100)")]
		public string Cpu
		{
			get
			{
				return this._Cpu;
			}
			set
			{
				if ((this._Cpu != value))
				{
					this.OnCpuChanging(value);
					this.SendPropertyChanging();
					this._Cpu = value;
					this.SendPropertyChanged("Cpu");
					this.OnCpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ram", DbType="VarChar(100)")]
		public string Ram
		{
			get
			{
				return this._Ram;
			}
			set
			{
				if ((this._Ram != value))
				{
					this.OnRamChanging(value);
					this.SendPropertyChanging();
					this._Ram = value;
					this.SendPropertyChanged("Ram");
					this.OnRamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vga", DbType="VarChar(100)")]
		public string Vga
		{
			get
			{
				return this._Vga;
			}
			set
			{
				if ((this._Vga != value))
				{
					this.OnVgaChanging(value);
					this.SendPropertyChanging();
					this._Vga = value;
					this.SendPropertyChanged("Vga");
					this.OnVgaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS", DbType="VarChar(100)")]
		public string OS
		{
			get
			{
				return this._OS;
			}
			set
			{
				if ((this._OS != value))
				{
					this.OnOSChanging(value);
					this.SendPropertyChanging();
					this._OS = value;
					this.SendPropertyChanged("OS");
					this.OnOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float")]
		public System.Nullable<double> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAPTOP_LAPTOPDETAIL", Storage="_LAPTOP", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public LAPTOP LAPTOP
		{
			get
			{
				return this._LAPTOP.Entity;
			}
			set
			{
				LAPTOP previousValue = this._LAPTOP.Entity;
				if (((previousValue != value) 
							|| (this._LAPTOP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAPTOP.Entity = null;
						previousValue.LAPTOPDETAIL = null;
					}
					this._LAPTOP.Entity = value;
					if ((value != null))
					{
						value.LAPTOPDETAIL = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("LAPTOP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.manufacturer")]
	public partial class manufacturer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDM;
		
		private string _ManufacturerName;
		
		private EntitySet<LAPTOP> _LAPTOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMChanging(int value);
    partial void OnIDMChanged();
    partial void OnManufacturerNameChanging(string value);
    partial void OnManufacturerNameChanged();
    #endregion
		
		public manufacturer()
		{
			this._LAPTOPs = new EntitySet<LAPTOP>(new Action<LAPTOP>(this.attach_LAPTOPs), new Action<LAPTOP>(this.detach_LAPTOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDM
		{
			get
			{
				return this._IDM;
			}
			set
			{
				if ((this._IDM != value))
				{
					this.OnIDMChanging(value);
					this.SendPropertyChanging();
					this._IDM = value;
					this.SendPropertyChanged("IDM");
					this.OnIDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManufacturerName", DbType="NVarChar(20)")]
		public string ManufacturerName
		{
			get
			{
				return this._ManufacturerName;
			}
			set
			{
				if ((this._ManufacturerName != value))
				{
					this.OnManufacturerNameChanging(value);
					this.SendPropertyChanging();
					this._ManufacturerName = value;
					this.SendPropertyChanged("ManufacturerName");
					this.OnManufacturerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="manufacturer_LAPTOP", Storage="_LAPTOPs", ThisKey="IDM", OtherKey="IDM")]
		public EntitySet<LAPTOP> LAPTOPs
		{
			get
			{
				return this._LAPTOPs;
			}
			set
			{
				this._LAPTOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.manufacturer = this;
		}
		
		private void detach_LAPTOPs(LAPTOP entity)
		{
			this.SendPropertyChanging();
			entity.manufacturer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDO;
		
		private System.Nullable<bool> _Payment;
		
		private System.Nullable<bool> _Deliver;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<System.DateTime> _DiliverDate;
		
		private string _Reciever;
		
		private string _Place;
		
		private string _Phone;
		
		private System.Nullable<int> _IDC;
		
		private EntitySet<ordersdetail> _ordersdetails;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOChanging(int value);
    partial void OnIDOChanged();
    partial void OnPaymentChanging(System.Nullable<bool> value);
    partial void OnPaymentChanged();
    partial void OnDeliverChanging(System.Nullable<bool> value);
    partial void OnDeliverChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnDiliverDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiliverDateChanged();
    partial void OnRecieverChanging(string value);
    partial void OnRecieverChanged();
    partial void OnPlaceChanging(string value);
    partial void OnPlaceChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnIDCChanging(System.Nullable<int> value);
    partial void OnIDCChanged();
    #endregion
		
		public order()
		{
			this._ordersdetails = new EntitySet<ordersdetail>(new Action<ordersdetail>(this.attach_ordersdetails), new Action<ordersdetail>(this.detach_ordersdetails));
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDO
		{
			get
			{
				return this._IDO;
			}
			set
			{
				if ((this._IDO != value))
				{
					this.OnIDOChanging(value);
					this.SendPropertyChanging();
					this._IDO = value;
					this.SendPropertyChanged("IDO");
					this.OnIDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Bit")]
		public System.Nullable<bool> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deliver", DbType="Bit")]
		public System.Nullable<bool> Deliver
		{
			get
			{
				return this._Deliver;
			}
			set
			{
				if ((this._Deliver != value))
				{
					this.OnDeliverChanging(value);
					this.SendPropertyChanging();
					this._Deliver = value;
					this.SendPropertyChanged("Deliver");
					this.OnDeliverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiliverDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DiliverDate
		{
			get
			{
				return this._DiliverDate;
			}
			set
			{
				if ((this._DiliverDate != value))
				{
					this.OnDiliverDateChanging(value);
					this.SendPropertyChanging();
					this._DiliverDate = value;
					this.SendPropertyChanged("DiliverDate");
					this.OnDiliverDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reciever", DbType="NVarChar(50)")]
		public string Reciever
		{
			get
			{
				return this._Reciever;
			}
			set
			{
				if ((this._Reciever != value))
				{
					this.OnRecieverChanging(value);
					this.SendPropertyChanging();
					this._Reciever = value;
					this.SendPropertyChanged("Reciever");
					this.OnRecieverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="NVarChar(200)")]
		public string Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(12)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDC", DbType="Int")]
		public System.Nullable<int> IDC
		{
			get
			{
				return this._IDC;
			}
			set
			{
				if ((this._IDC != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCChanging(value);
					this.SendPropertyChanging();
					this._IDC = value;
					this.SendPropertyChanged("IDC");
					this.OnIDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="order_ordersdetail", Storage="_ordersdetails", ThisKey="IDO", OtherKey="IDO")]
		public EntitySet<ordersdetail> ordersdetails
		{
			get
			{
				return this._ordersdetails;
			}
			set
			{
				this._ordersdetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="IDC", OtherKey="IDC", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._IDC = value.IDC;
					}
					else
					{
						this._IDC = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ordersdetails(ordersdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = this;
		}
		
		private void detach_ordersdetails(ordersdetail entity)
		{
			this.SendPropertyChanging();
			entity.order = null;
		}
	}
}
#pragma warning restore 1591
